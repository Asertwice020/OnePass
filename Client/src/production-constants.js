const CLIENT = {
  API_BASE_URL: "https://onepass-server.onrender.com/api",
  APPLICATION_VERSION: "v 0.1.2",
  DEBOUNCE_TIME: 500,
  SPLASH_SCREEN_TIME: 4000,
  MAX_RETRIES: 2,
  RETRY_DELAY: 200, // 200ms delay between retries
  TIMEOUT: 1500, // 1500ms total timeout for retry process
  PUBLIC_ROUTES: ["/login", "/register", "/onboarding"],
};

const SERVICES = {
  USERS: {
    SERVICE_PATH: "users",
    SERVING_ROUTES: {
      REGISTER: "register",
      LOGIN: "login",
      LOGOUT: "logout",
      EDIT_PROFILE: "edit-profile",
      RESOURCE_EXIST: "resource-exists",
      FETCH_USER: "fetch-new-user-details",
      CHECK_USERNAME_AVAILABILITY: "check-username-availability",
      GET_STORED_PASSWORDS: "all-passwords",
      GET_DECRYPTED_PASSWORDS: "decrypt-password",
      GET_NEW_ACCESS_TOKEN: "get-new-access-token",
    },
    API_VERSION: "v1",
  },
  PASSWORDS: {
    SERVICE_PATH: "passwords",
    SERVING_ROUTES: {
      ADD: "add",
      UPDATE: "update",
      DELETE: "delete",
    },
    API_VERSION: "v1",
  },
};

const SERVICES_ROUTES = {
  // -> user
  REGISTER: `${CLIENT.API_BASE_URL}/${SERVICES.USERS.API_VERSION}/${SERVICES.USERS.SERVICE_PATH}/${SERVICES.USERS.SERVING_ROUTES.REGISTER}`,
  LOGIN: `${CLIENT.API_BASE_URL}/${SERVICES.USERS.API_VERSION}/${SERVICES.USERS.SERVICE_PATH}/${SERVICES.USERS.SERVING_ROUTES.LOGIN}`,
  LOGOUT: `${CLIENT.API_BASE_URL}/${SERVICES.USERS.API_VERSION}/${SERVICES.USERS.SERVICE_PATH}/${SERVICES.USERS.SERVING_ROUTES.LOGOUT}`,
  EDIT_PROFILE: `${CLIENT.API_BASE_URL}/${SERVICES.USERS.API_VERSION}/${SERVICES.USERS.SERVICE_PATH}/${SERVICES.USERS.SERVING_ROUTES.EDIT_PROFILE}`,
  RESOURCE_EXIST: `${CLIENT.API_BASE_URL}/${SERVICES.USERS.API_VERSION}/${SERVICES.USERS.SERVICE_PATH}/${SERVICES.USERS.SERVING_ROUTES.RESOURCE_EXIST}`,
  FETCH_USER: `${CLIENT.API_BASE_URL}/${SERVICES.USERS.API_VERSION}/${SERVICES.USERS.SERVICE_PATH}/${SERVICES.USERS.SERVING_ROUTES.FETCH_USER}`,
  CHECK_USERNAME_AVAILABILITY: `${CLIENT.API_BASE_URL}/${SERVICES.USERS.API_VERSION}/${SERVICES.USERS.SERVICE_PATH}/${SERVICES.USERS.SERVING_ROUTES.CHECK_USERNAME_AVAILABILITY}`,
  GET_STORED_PASSWORDS: `${CLIENT.API_BASE_URL}/${SERVICES.USERS.API_VERSION}/${SERVICES.USERS.SERVICE_PATH}/${SERVICES.USERS.SERVING_ROUTES.GET_STORED_PASSWORDS}`,
  GET_DECRYPTED_PASSWORDS: `${CLIENT.API_BASE_URL}/${SERVICES.USERS.API_VERSION}/${SERVICES.USERS.SERVICE_PATH}/${SERVICES.USERS.SERVING_ROUTES.GET_DECRYPTED_PASSWORDS}`,
  GET_NEW_ACCESS_TOKEN: `${CLIENT.API_BASE_URL}/${SERVICES.USERS.API_VERSION}/${SERVICES.USERS.SERVICE_PATH}/${SERVICES.USERS.SERVING_ROUTES.GET_NEW_ACCESS_TOKEN}`,

  // -> password
  ADD_PASSWORD: `${CLIENT.API_BASE_URL}/${SERVICES.PASSWORDS.API_VERSION}/${SERVICES.PASSWORDS.SERVICE_PATH}/${SERVICES.PASSWORDS.SERVING_ROUTES.ADD}`,
  UPDATE_PASSWORD: `${CLIENT.API_BASE_URL}/${SERVICES.PASSWORDS.API_VERSION}/${SERVICES.PASSWORDS.SERVICE_PATH}/${SERVICES.PASSWORDS.SERVING_ROUTES.UPDATE}`,
  DELETE_PASSWORD: `${CLIENT.API_BASE_URL}/${SERVICES.PASSWORDS.API_VERSION}/${SERVICES.PASSWORDS.SERVICE_PATH}/${SERVICES.PASSWORDS.SERVING_ROUTES.DELETE}`,
};

export { CLIENT, SERVICES, SERVICES_ROUTES };